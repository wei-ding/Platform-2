MyData <- read.csv(file="input_file.csv", header=TRUE, sep=",")
require(randomizeR)
library(outliers)
library(tcltk)
library(stringr)
library(plyr)
library(dplyr)
library(stringi)
CWD <- getwd()
if (!is.null(CWD)) setwd(CWD)
thefile <- ("concept.txt")
concept_Data_All  <- read.csv(thefile, header=TRUE, dec=".",sep="\t", row.names=NULL, stringsAsFactors = FALSE)
# Filtering dob, age, and height in concept table
concept_Data <- concept_Data_All [!concept_Data_All$property_name %in% c('dob','Age','Height'),]
filenames <- list.files("set-a", pattern="*.txt")
filenames <- paste("set-a", filenames, sep="/")
filenames
observation<-NULL
#Some value to start with
obs_id=1776118
base_date.lt = as.POSIXlt("2014-01-01 00:00:00")
for (i in 1:length(filenames))
{
df<-NULL
Person_Id<-NULL
concept_description<-NULL
concept_id<-NULL
time<-NULL
value<-NULL
date<-NULL
df_all <- read.csv(filenames[i], header=TRUE, dec=".",sep=",", row.names=NULL, stringsAsFactors = FALSE)
# filtering the records If the Parameter value isn't in the concept_Data dataset property name list
df = df_all[df_all$Parameter %in% concept_Data$property_name, ]
Person_Id = df_all$Value[1]
concept_description = df$Parameter
time=df$Time
value=df$Value
time_list<-strsplit(time,":")
old_value <- value
if(length(value) != 2)
{
for (j in 1:length(value))
{
result <- try((concept_id[j]=which(concept_Data$property_name==concept_description[j])))
if(time_list[[j]][1]<24.00){
date[j]="2014-01-01"
}
if(time_list[[j]][1]>23.99){
date[j]="2014/01/02"
}
}
df2<-data.frame(OBSERVATION="OBSERVATION",observation_id=obs_id,person_id=Person_Id,
observation_concept_id=concept_id,observation_date=date,observation_time=time,
Original_values=old_value,value_as_string="NULL",value_as_concept_id="NULL",
unit_concept_id="NULL",range_low="NULL",range_high="NULL",
observation_type_concept_id="NULL",associated_provider_id="NULL",
visit_occurrence_id="NULL",relevant_condition_concept_id="NULL",
observation_source_value="NULL",units_source_value="NULL")
rbind(observation, df2)->observation
obs_id=obs_id+1
}
}
generatedDates <- format(seq.Date(as.Date('1978-01-01'), by = 'day', len = length(observation$Original_values)), "%D")
for (j in 1:length(observation$Original_values))
{
observation$generatedDate[j] = generatedDates[j]
}
values <- observation$Original_values
dummyobservation <- observation
dataset <- data.frame ( table ( dummyobservation$observation_concept_id ) )
dataset_mean <- tapply(dummyobservation$Original_values,dummyobservation$observation_concept_id, mean)
dataset_sd <- tapply(dummyobservation$Original_values,dummyobservation$observation_concept_id, sd)
real_observation <- NULL
for(w in 1:nrow(dataset))
{
dataset_mean_concept <- dataset_mean[dataset[w,"Var1"]]
dataset_sd_concept <- dataset_sd[dataset[w,"Var1"]]
outlier_dataset <- subset(dummyobservation, dummyobservation$observation_concept_id == (dataset[w,"Var1"]))
outlier_dataset["value_as_number"] <- NA # That creates the new column named "value_as_number" filled with "NA"
outlier_tf = outlier(outlier_dataset$Original_values,logical=TRUE)
find_outlier = which(outlier_tf==TRUE,arr.ind=TRUE)
find_outlier
for(k in 1:length(outlier_dataset$Original_values))
{
if(outlier_dataset$Original_values[k] == outlier_dataset$Original_values[find_outlier])
{
set.seed(outlier_dataset$Original_values[k])
#outlier_dataset$value_as_number[k] <- rnorm(1, mean=dataset_mean_concept)
real_value_outlier <- rnorm(1, mean=dataset_mean_concept)
if(real_value_outlier < 0){
real_value_outlier <- rnorm(1, mean=dataset_mean_concept)
}
outlier_dataset$value_as_number[k] <- signif(real_value_outlier,digits=3)
}
else
{
set.seed(outlier_dataset$Original_values[k])
#outlier_dataset$value_as_number[k] <- rnorm(1,mean=dataset_mean_concept,sd=dataset_sd_concept)
real_value_normal <- rnorm(1,mean=dataset_mean_concept,sd=dataset_sd_concept)
if(real_value_normal < 0){
real_value_normal <- rnorm(1, mean=dataset_mean_concept)
}
outlier_dataset$value_as_number[k] <- signif(real_value_normal,digits=3)
#print(typeof(outlier_dataset$value_as_number[k]))
}
}
rbind(real_observation, outlier_dataset) -> real_observation
}
calculate_time <- function(time) {
intial_time <- time/3600
hr <-  time %/% 3600
diff <- intial_time - hr
min <- floor(diff * 100)
hr <- as.integer(hr)
min <- as.integer(min)
if(min >= 60){
min <- min - 60
hr <- hr + 1
}
if(0<=hr && hr<=9)
{
hr <- paste0(0,hr)
}
if(0<=min && min<=9)
{
min <- paste0(0,min)
}
return(paste(hr,min,sep=':'))
}
times <- real_observation$observation_time
Res <- paste(times)
timelist<-strsplit(Res,":")
args <- commandArgs(trailingOnly=TRUE)
MyData <- read.csv(file="input_file.csv", header=TRUE, sep=",")
t_param <- MyData$x
for(x in 1:length(real_observation$observation_time)){
minutes <- as.numeric(timelist[[x]][1]) * 60 + as.numeric(timelist[[x]][2])
random_amount <- minutes %% 48 * t_param
time_minutes <- (minutes + random_amount)
time_seconds <- time_minutes * 60
real_time <- calculate_time(time_seconds)
real_observation$randomized_time[x] <- real_time
}
# Person_id should be an INTEGER field
c3po_observation <- data.frame(OBSERVATION=real_observation$OBSERVATION,observation_id=real_observation$observation_id,person_id=real_observation$person_id, observation_concept_id=real_observation$observation_concept_id,observation_date=real_observation$generatedDate,observation_time=real_observation$randomized_time, value_as_number=real_observation$value_as_number,value_as_string="NULL",value_as_concept_id="NULL",unit_concept_id="NULL",range_low="NULL",range_high="NULL",observation_type_concept_id=0,associated_provider_id=0,visit_occurrence_id="NULL",relevant_condition_concept_id="NULL",observation_source_value="NULL",units_source_value="NULL")
c3po_observation$observation_date <- as.character(c3po_observation$observation_date)
c3po_observation$observation_time <- as.character(c3po_observation$observation_time)
c3po_observation$observation_time <- gsub(':', '.', c3po_observation$observation_time)
c3po_observation$observation_time <- as.numeric(as.character(c3po_observation$observation_time))
c3po_observation$observation_date <- format( strptime (
(base_date.lt +
(c3po_observation$observation_time - (c3po_observation$observation_time %% 1))*3600
+(c3po_observation$observation_time %% 1)*6000) , "%Y-%m-%d %H:%M"), "%m/%d/%y")
c3po_observation$observation_time <- format( strptime (
(base_date.lt +
(c3po_observation$observation_time - (c3po_observation$observation_time %% 1))*3600
+(c3po_observation$observation_time %% 1)*6000) , "%Y-%m-%d %H:%M"), "%H:%M")
#c3po_observation <- data.frame(OBSERVATION=real_observation$OBSERVATION,observation_id="NULL",person_id=real_observation$person_id, observation_concept_id=real_observation$observation_concept_id,observation_date=real_observation$observation_date,observation_time=real_observation$randomized_time, value_as_number=real_observation$value_as_number,value_as_string="NULL",value_as_concept_id="NULL",unit_concept_id="NULL",range_low="NULL",range_high="NULL",observation_type_concept_id=0,associated_provider_id=0,visit_occurrence_id="NULL",relevant_condition_concept_id="NULL",observation_source_value="NULL",units_source_value="NULL")
write.table(c3po_observation, file="output/c3po_observation.txt",row.names=FALSE, quote = FALSE, sep = ";")
