Various arguments can be specified at the command line to execute ML-Flex in custom ways. Two of these arguments are mandatory, while the remaining arguments are optional. Below are a few examples of how these parameters can be specified in executing ML-Flex. (Please note also that an -Xmx argument is passed to Java. This argument allows the user to increase the amount of memory that is available to java, which can be crucial in processing large data sets.)

  * In this example, a simple cross-validation experiment is performed, and debugging is turned on:

    java -Xmx1g -jar mlflex.jar EXPERIMENT_FILE=Experiments/CrossValidationSimple.txt ACTION=Process DEBUG=true

  * In this example, execution is shared across two threads and the timeout and pause values are specified explicitly:

    java -Xmx1g -jar mlflex.jar EXPERIMENT_FILE=Experiments/CrossValidationSimple.txt ACTION=Process NUM_THREADS=2 THREAD_TIMEOUT_MINUTES=60 PAUSE_SECONDS=60

  * In this example, the data are exported to various formats after cross validation is performed:

    java -Xmx1g -jar mlflex.jar EXPERIMENT_FILE=Experiments/CrossValidationSimple.txt ACTION=Process EXPORT=true

  * In this example, the experiment is reset:

    java -Xmx1g -jar mlflex.jar EXPERIMENT_FILE=Experiments/CrossValidationSimple.txt ACTION=Reset


Below is a list of all command-line arguments, along with examples of how to use them.

==================================================
======== Mandatory command-line arguments ========
==================================================

EXPERIMENT_FILE

  Description: This setting requires the user to specify a path to an experiment file. The name of this file will be used as the experiment name, and the file should contain settings for an ML-Flex experiment (see Creating_an_Experiment_File.txt).

ACTION

  Description: This setting requires the user to specify one of two actions that can be performed when ML-Flex executes. These actions are described below. 

     a. Process = The specified experiment will be executed. This action can be executed across multiple computers in parallel, as long as they all have access to the same file store. ML-Flex will automatically split the work across any computers currently executing an experiment.
     a. Reset = All files that were previously generated by ML-Flex for the specified experiment will be deleted. This task can execute in parallel on a single computer, which speeds up the process of deleting files substantially. Obviously, it does not make sense to perform a Reset on one computer while the Process action is executing on another computer for the same experiment.

==================================================
======== Optional command-line arguments ========
==================================================

DEBUG

  Description: As ML-Flex executes, it outputs logging information to standard out and to a Log.txt file. Additional logging information can be output when DEBUG is set to true. This can be useful when an error has occurred to aid in troubleshooting. By default, debugging is turned off to avoid computational and storage overhead.

  Default: false

NUM_THREADS

  Description: ML-Flex uses the Java threading capability to execute computing tasks in parallel. With this setting, the user can specify the maximum number of threads per computing node that can be used by ML-Flex. If ML-Flex seems to be running slowly on large data sets, it may be that this value is too high.

  Default: The number of processors available to the Java virtual machine on the computer on which ML-Flex is executed.

THREAD_TIMEOUT_MINUTES

  Description: ML-Flex uses the Java threading capability to execute computing tasks in parallel. For a variety of reasons, a thread may "hang" and not return a result. Thus it may be desirable to specify a timeout period after which ML-Flex will abandon a thread and retry executing the task. It is recommended that this setting be longer than the longest time that any given feature selection or classification task is expected to take.

  Default value: 60

PAUSE_SECONDS

  Description: When ML-Flex attempts to execute tasks across multiple computing nodes, it may identify a situation where a processing task remains to be performed and it appears that another thread is currently executing that task. In most cases, this is truly because the task is being executed, so the current thread will pause for a short time and wait to see if the other thread has completed processing. If so, the current thread will move on to the next set of tasks. Otherwise, the current thread will pause again, and this process will repeat until the thread timeout has occurred (after which the corresponding lock file will be deleted and the current thread will attempt to execute the task). The PAUSE_SECONDS configuration value specifies the number of seconds that each pause will last.

  Default: 60

EXPORT_DATA

  Description: This setting accepts either "true" or "false" as a value. When set to true, the data that have been processed by ML-Flex will be exported to multiple formats (currently, tab-delimited and ARFF) to enable the user to perform downstream analyses if desired.

  Default: false

MAIN_DIRECTORY

  Description: It is possible to store the ML-Flex executable files in one location and the data files in a different location. This setting allows you to specify where the data files are stored. By default, the executable files are stored in the same location as the data files. This setting will likely be used rarely.

  Default: Same location as the executable files.

CLASSIFICATION_ALGORITHMS_FILE

  Description: By default, classification algorithms are configured in the Config/Classification_Algorithms.txt file. However, an alternative file can be specified using this parameter.

  Default: Config/Classification_Algorithms.txt

FEATURE_SELECTION_ALGORITHMS_FILE

  Description: By default, feature-selection algorithms are configured in the Config/Feature_Selection_Algorithms.txt file. However, an alternative file can be specified using this parameter.

  Default: Config/Feature_Selection_Algorithms.txt
